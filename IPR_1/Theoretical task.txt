23. Самоотрисовывающиеся (ownerdraw) элементы управления (на примере кнопки) – формирование пользовательского изображения, обработка событий


Элемент управления (control) - окно, которое прикладная программа использует, чтобы получить конретную информацию от пользователя, такую как имя файла, чтобы его открыть или нужныйный размер выбранного текста в пунктах. Прикладные программы также используют элементы управления, чтобы получить информацию, необходимую для управления специфическими свойствами прикладной программы. Например, прикладная программа обработки текстов обычно предоставляет элемент управления, который позволяет пользователю включать и выключать автоматический перенос слов.

Группа элементов управления, которая включает в себя кнопку (Button), флажок (Check box), переключатель (Radio button) и групповую рамку (Group box), реализуется как дочерние окна предопределенного оконного класса BUTTON.

Кнопка (Button), называемая иногда «нажимаемой кнопкой» (push button), представляет собой прямоугольник, внутри которого обычно располагается некоторый текст. Щелчок мышью на кнопке заставляет ее перерисовать себя, используя стиль 3D с тенью, чтобы выглядеть «нажатой». Отпускание кнопки мыши восстанавливает начальный облик нажимаемой кнопки, а родительскому окну посылается сообщение WM_COMMAND с кодом уведомления BN_CLICKED.

Кнопки Button используются в основном для немедленного выполнения действия, без сохранения какой-либо индикации положения кнопки «включено/выключено».

Если при задании свойств кнопки был установлен флажок Owner draw, то в определении кнопки в файле описания ресурсов появится стиль BS_OWNERDRAW. Кнопка стиля BS_OWNERDRAW отличается от обычной кнопки тем, что при необходимости перерисовки она посылает своему родительскому окну сообщение WM_DRAWITEM. Это происходит при первоначальном создании кнопки, при ее нажатии или отпускании, при получении или потере фокуса ввода и во всех других случаях, когда требуется перерисовка элемента управления. 

Когда приложение получает сообщение WM_DRAWITEM, параметр wParam этого сообщения содержит идентификатор элемента управления, а параметр lParam является указателем на структуру типа DRAWITEMSTRUCT. Сообщение WM_DRAWITEM может поступать не только от кнопок со стилем Owner draw, но и от элементов  управления Combo box, List box и List view, если они имеют аналогичный стиль.

Структура DRAWITEMSTRUCT определена следующим образом:
typedef struct {
 UINT CtlType;
 UINT CtlID;
 UINT itemID;
 UINT itemAction;
 UINT itemState;
 HWND hwndItem;
 HDC hDC;
 RECT rcItem;
 ULONG_PTR itemData;
} DRAWITEMSTRUCT;

Поле CtlType позволяет указывать тип элемента управления. 

В поле CtlID передается идентификатор элемента управления. Оно не используется, если источником сообщения является пункт меню. В поле itemID передается идентификатор пункта меню или индекс строки в элементе управления Combo box или List box. 

Поле itemAction определяет тип действия, связанного с элементом управления

Поле itemState определяет текущее визуальное состояние элемента управления в виде комбинации битовых флагов.

Поле hDC содержит дескриптор контекста устройства для дочернего окна элемента управления. Этот дескриптор нужно использовать во всех функциях рисования.

Поле rcItem содержит размеры прямоугольника, ограничивающего элемент управления. Прямоугольник определен в контексте устройства с дескриптором hDC.

Обрабатывая сообщение WM_DRAWITEM, приложение должно вызвать функции рисования в контексте устройства hDC, чтобы обеспечить требуемый вид кнопки. Чаще всего для этого используются растровые образы или просто выводится необходимый текст.

При нажатии кнопки операционная система генерирует сообщение WM_COMMAND с параметром lParam, соответствующим дескриптору кнопки.

Обработка нажатия кнопки:
 
 LONG WINAPI WndProc(HWND hwnd, UINT Message, WPARAM wparam, LPARAM lparam) {
  ...
  switch (Message) {
    case WM_COMMAND:
      if(lparam == (LPARAM)hBtn) {
        //обработка нажатия кнопки
      }
      break;
    ...
  }
}
